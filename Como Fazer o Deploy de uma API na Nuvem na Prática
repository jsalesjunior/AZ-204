## VisÃ£o Geral do Processo
# Criar um RepositÃ³rio no Azure DevOps

# CÃ³digo-fonte da API (.NET)
# Arquivos de configuraÃ§Ã£o
# Configurar um Pipeline de CI/CD no Azure DevOps

# CI (Continuous Integration): Compila e testa a API
# CD (Continuous Deployment): Faz deploy para o Azure App Service ou Azure Function App
# Publicar a API na Nuvem (Azure)

## Escolher entre Azure App Service ou Azure Functions para hospedar a API

## Criar um Projeto e RepositÃ³rio no Azure DevOps
-VÃ¡ para Azure DevOps
-Crie um novo Projeto
-No repositÃ³rio, suba o cÃ³digo da sua API (.NET)
-Configurar o Pipeline de CI/CD
-Crie um arquivo azure-pipelines.yml na raiz do repositÃ³rio:

trigger:
- main  # Roda o pipeline quando houver mudanÃ§as na branch main

pool:
  vmImage: 'windows-latest'

variables:
  azureServiceConnection: 'minha-conexao-azure'
  appName: 'jsalesaz-dev001' # Nome do App no Azure
  resourceGroup: 'az400resoucegroup'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  displayName: 'Restaurar dependÃªncias'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Compilar aplicaÃ§Ã£o'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration Release'

- task: DotNetCoreCLI@2
  displayName: 'Publicar aplicaÃ§Ã£o'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Salvar build'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'

- task: AzureFunctionApp@1
  displayName: 'Deploy para o Azure'
  inputs:
    azureSubscription: $(azureServiceConnection)
    appName: $(appName)
    package: '$(Build.ArtifactStagingDirectory)/**/*.zip'

## Configurar a ConexÃ£o com o Azure
-No Azure DevOps, vÃ¡ atÃ© Project Settings > Service Connections e crie uma conexÃ£o com o Azure
-DÃª permissÃ£o para essa conexÃ£o gerenciar os recursos do Azure

## Executar o Pipeline
-VÃ¡ atÃ© Pipelines > New Pipeline
-Escolha Azure Repos Git
-Selecione o repositÃ³rio com o cÃ³digo da API
-Escolha Existing Azure Pipelines YAML file e selecione azure-pipelines.yml
-Salve e execute o pipeline ðŸš€

## Testar a API na Nuvem
- ApÃ³s o deploy, obtenha a URL:
az functionapp show --name jsalesaz-dev001 --resource-group az400resoucegroup --query defaultHostName --output tsv
